{"version":3,"sources":["services/blogs.js","reducers/blogsReducer.js","services/login.js","reducers/notificationReducer.js","reducers/userReducer.js","services/users.js","reducers/usersReducer.js","components/Navbar.js","components/Notification.js","components/LoginForm.js","components/Login.js","components/BlogForm.js","components/Togglable.js","components/BlogList.js","components/Users.js","components/BlogPage.js","components/Blogger.js","App.js","store/store.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newBlog","config","headers","Authorization","post","addLike","blog","put","id","remove","delete","createComment","newComment","setToken","newToken","initializeBlogs","dispatch","blogsService","blogs","type","blogsReducer","state","action","blogToLike","find","b","changedBlog","likes","map","removed","filter","blogToComment","CommentedBlog","comments","concat","login","credentials","notificationToggle","message","kind","time","timeout","ms","Promise","resolve","setTimeout","notificationReducer","show","loginUser","loginService","user","window","localStorage","setItem","JSON","stringify","blogService","name","console","log","userReducer","getBlogger","initializeUsers","usersService","users","usersReducer","Navbar","handleLogout","style","padding","to","onClick","Notification","notification","useSelector","className","LoginForm","loginHandler","useState","username","setUsername","password","setPassword","handleChange","event","target","value","onSubmit","preventDefault","htmlFor","onChange","disabled","length","Login","useDispatch","handleLogin","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","title","author","url","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","BlogList","blogFormRef","useRef","blogObject","content","current","error","TableContainer","component","Paper","Table","TableBody","sort","TableRow","key","TableCell","Users","useEffect","usr","BlogPage","confirmRemove","setConfirmRemove","setNewComment","history","useHistory","useParams","like","likedBlog","removedID","blogToRemove","removeBlog","push","handleRemove","href","rel","comment","c","Blogger","blogger","u","App","loading","setLoading","loggedUserJSON","getItem","parse","setUser","Container","removeItem","logoutUser","path","render","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4f86558e.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nconst addLike = async blog => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  // Already giving +1 to like and sending the blog here\n  // const changedBlog = {\n  //   ...blog,\n  //   likes: blog.likes + 1\n  // }\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst createComment = async (newComment, blog) => {\n  const response = await axios.post(`${baseUrl}/${blog.id}/comments/`, newComment)\n  return response.data\n}\n\nexport default {\n  getAll,\n  create,\n  createComment,\n  addLike,\n  remove,\n  setToken\n}\n","import blogsService from '../services/blogs'\n\nconst blogsReducer = (state = [], action) => {\n\n  switch (action.type) {\n    case 'ADD_LIKE':\n      const id = action.data\n      const blogToLike = state.find(b => b.id === id)\n      const changedBlog = {\n        ...blogToLike, likes: blogToLike.likes + 1\n      }\n      return state.map(blog => blog.id !== id ? blog : changedBlog)\n\n    case 'REMOVE_BLOG':\n      const removed = action.removed\n      return state.filter(blog => blog.id !== removed)\n\n    case 'ADD_BLOG':\n      return [...state, action.data]\n\n    case 'INIT_BLOGS': {\n      return action.data\n    }\n\n    case 'ADD_COMMENT': {\n      const id = action.id\n      const blogToComment = state.find(b => b.id === id)\n      const CommentedBlog = {\n        ...blogToComment, comments: blogToComment.comments.concat(action.data)\n      }\n      return state.map(blog => blog.id !== id ? blog : CommentedBlog)\n    }\n\n    default:\n      break\n  }\n\n  return state\n}\n\nexport const addLike = blog => {\n  return async dispatch => {\n    const blogToLike = await blogsService.addLike(blog)\n    dispatch({ type: 'ADD_LIKE', data: blogToLike.id })\n  }\n}\n\nexport const removeBlog = blog => {\n  return async dispatch => {\n    const removedID = blog.id\n    const blogToRemove = await blogsService.remove(blog.id)\n    dispatch({ type: 'REMOVE_BLOG', data: blogToRemove, removed: removedID })\n  }\n}\n\nexport const createBlog = (content, user) => {\n  return async dispatch => {\n    const newBlog = await blogsService.create(content)\n    newBlog.user = user\n    dispatch({ type: 'ADD_BLOG', data: newBlog })\n  }\n}\n\nexport const createComment = (content, blog) => {\n  return async dispatch => {\n    const newComment = await blogsService.createComment(content, blog)\n    dispatch({ type: 'ADD_COMMENT', data: newComment, id: blog.id })\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogsService.getAll()\n    dispatch({ type: 'INIT_BLOGS', data: blogs })\n  }\n}\n\nexport default blogsReducer\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","const notificationReducer = (state = { show: false, message: null, kind: null }, action) => {\n  switch (action.type) {\n    case 'SHOW_NOTIFICATION':\n      return { show: true, message: action.message, kind: action.kind }\n    case 'HIDE_NOTIFICATION':\n      return { show: false, message: null, kind: null }\n    default:\n      return state\n  }\n}\n\nexport const notificationToggle = (message, kind, time) => {\n  function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  return async dispatch => {\n    dispatch({ type: 'SHOW_NOTIFICATION', message, kind })\n    time = time * 1000\n    await timeout(time)\n    dispatch({ type: 'HIDE_NOTIFICATION', message })\n  }\n}\n\n// export const notificationHide = message => {\n//   return {\n//     type: 'HIDE_NOTIFICATION',\n//     message,\n//   }\n// }\n\nexport default notificationReducer\n","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { notificationToggle } from '../reducers/notificationReducer'\n\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data\n    case 'LOGIN_USER':\n      return action.data\n    case 'LOGOUT_USER':\n      return action.data\n\n    default:\n      return state\n  }\n}\n\nexport const loginUser = credentials => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n      dispatch({ type: 'LOGIN_USER', data: user })\n      blogService.setToken(user.token)\n      dispatch(notificationToggle(`Welcome ${user.name}`, 'success', 3.8))\n    } catch (error) {\n      console.log(error)\n      dispatch(notificationToggle('Error: Wrong username or password', 'error', 3.8))\n    }\n  }\n}\n\nexport const logoutUser = user => {\n  return dispatch => {\n    try {\n      const storedUser = window.localStorage.getItem('loggedBlogAppUser')\n      if (storedUser) {\n        window.localStorage.removeItem('loggedBlogAppUser')\n      }\n      dispatch(notificationToggle(`Bye bye ${user.name}`, 'success', 3.8))\n      dispatch({ type: 'LOGOUT_USER', data: null})\n    } catch (error) {\n      console.log(error)\n    }\n  }\n}\n\nexport const setUser = () => {\n  const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n  if (loggedUserJSON) {\n    const user = JSON.parse(loggedUserJSON)\n    blogService.setToken(user.token)\n    return dispatch => {\n      dispatch({ type: 'SET_USER', data: user })\n    }\n  } else {\n    return dispatch => {\n      dispatch({ type: 'SET_USER', data: null })\n    }\n  }\n}\n\nexport default userReducer\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getBlogger = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default {\n  getAll,\n  getBlogger\n}\n","import usersService from '../services/users'\n\nconst usersReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'INIT_USERS': {\n      return action.data\n    }\n\n    default:\n      break\n  }\n\n  return state\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n    dispatch({ type: 'INIT_USERS', data: users })\n  }\n}\n\nexport default usersReducer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = ({ user, handleLogout }) => {\n  return (\n    <div>\n      <Link style={{padding: '5px'}} to=\"/\">home</Link>\n      <Link style={{padding: '5px'}} to=\"/users\">users</Link>\n      { user\n        ? <p>{user.name} logged in <button onClick={handleLogout}>Logout</button></p>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport './Notification.css'\nimport { useSelector } from 'react-redux'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notification)\n  if (notification.message === false) {\n    return null\n  }\n\n  return (\n    <div className={ notification.kind === 'success' ? 'success-message' : notification.kind === 'error' ? 'error-message' : null}>\n      {notification.message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './LoginForm.css'\n\nconst LoginForm = ({ loginHandler }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleChange = event => {\n    event.target.name === 'username-input'\n      ? setUsername(event.target.value)\n      : setPassword(event.target.value)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    loginHandler(({ username, password }))\n  }\n\n  return (\n    <form className=\"login-form\" onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username-input\">Username:</label>\n        <input\n          className=\"login-input\"\n          id=\"username-input\"\n          type=\"text\"\n          value={username}\n          name=\"username-input\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"password-input\">Password:</label>\n        <input\n          className=\"login-input\"\n          id=\"password-input\"\n          type=\"password\"\n          value={password}\n          name=\"password-input\"\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\" disabled={!username.length || !password.length}>login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  loginHandler: PropTypes.func.isRequired\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { loginUser } from '../reducers/userReducer'\nimport { useDispatch } from 'react-redux'\nimport LoginForm from '../components/LoginForm'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n\n  const handleLogin = async ({ username, password }) => {\n    dispatch(loginUser({ username, password }))\n  }\n  return (\n    <div>\n      <h2>Blog App</h2>\n      <h3>Log into application</h3>\n      <LoginForm loginHandler={handleLogin} />\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './BlogForm.css'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    name === 'title'\n      ? setNewTitle(value)\n      : name === 'author'\n        ? setNewAuthor(value)\n        : setNewUrl(value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    })\n\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n\n\n  return (\n    <form onSubmit={addBlog} className=\"blog-form\">\n      <div>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          name=\"title\"\n          value={newTitle}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"author\">Author:</label>\n        <input\n          name=\"author\"\n          value={newAuthor}\n          onChange={handleChange}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"url\">URL:</label>\n        <input\n          name=\"url\"\n          value={newUrl}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\">Add Blog</button>\n    </form>\n  )\n}\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired\n}\n\nexport default BlogForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport './Togglable.css'\n\n// ref is received here and forwarded\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div className=\"togglable\">\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import React, { useRef } from 'react'\nimport BlogForm from './BlogForm'\nimport Togglable from './Togglable'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { notificationToggle } from '../reducers/notificationReducer'\nimport { createBlog } from '../reducers/blogsReducer'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core'\n\nconst BlogList = () => {\n  const dispatch = useDispatch()\n  const blogs = useSelector(state => state.blogs)\n  const user = useSelector(state => state.user)\n  const blogFormRef = useRef()\n\n  const create = (blogObject) => {\n    try {\n      dispatch(createBlog(blogObject, user))\n      dispatch(notificationToggle(`A new blog ${blogObject.title} by ${blogObject.author} added`, 'success', 3.8))\n      blogFormRef.current.toggleVisibility()\n    } catch (error) {\n      console.log(error)\n      dispatch(notificationToggle(`Error adding a new blog`, 'error', 3.8))\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Blog App</h2>\n      <h3>blogs</h3>\n      <Togglable buttonLabel=\"new-blog\" ref={blogFormRef}>\n        <BlogForm createBlog={create} />\n      </Togglable>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableBody>\n          { blogs.sort((a, b) => b.likes - a.likes).map(blog =>\n            <TableRow key={blog.id}>\n              <TableCell>\n                <Link to={`/blogs/${blog.id}`}>{blog.title}</Link>\n              </TableCell>\n              <TableCell>\n                {blog.author}\n              </TableCell>\n            </TableRow>\n          )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n    </div>\n  )\n}\n\nexport default BlogList\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeUsers } from '../reducers/usersReducer'\nimport { Link } from 'react-router-dom'\n\nconst Users = () => {\n  const users = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n  return (\n    <div>\n      <div>\n        <h2>Blog App</h2>\n        <h3>Users</h3>\n        <table>\n          <tbody>\n          <tr>\n          <th></th>\n          <th>Blogs created</th>\n          </tr>\n            { users.map(usr =>\n              <tr key={usr.id}>\n                <td><Link style={{padding: '5px'}} to={`/users/${usr.id}`}>{usr.name}</Link></td>\n                <td>{usr.blogs.length}</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport  { initializeBlogs, createComment, addLike, removeBlog } from '../reducers/blogsReducer'\nimport { useHistory, Link } from 'react-router-dom'\n\nconst BlogPage = ({ user }) => {\n  const [confirmRemove, setConfirmRemove] = useState(false)\n  const [newComment, setNewComment] = useState('')\n\n  let history = useHistory()\n\n  const id = useParams().id\n  const blogs = useSelector(state => state.blogs)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    console.log('running - blogs effect')\n    if (blogs.length) {\n      return\n    } else dispatch(initializeBlogs())\n  }, [dispatch, blogs.length])\n\n  const like = id => {\n    const blog = blogs.find(b => b.id === id)\n    const likedBlog = { ...blog, likes: blog.likes + 1 }\n    try {\n      dispatch(addLike(likedBlog))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const remove = id => {\n    const blog = blogs.find(b => b.id === id)\n    try {\n      dispatch(removeBlog(blog))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleRemove = (id) => {\n    setTimeout(() => {\n      setConfirmRemove(false)\n    }, 500)\n    remove(id)\n    history.push('/')\n  }\n\n  const handleCommentChange = event => {\n    const comment = event.target.value\n    setNewComment(comment)\n  }\n\n  const addComment = (event) => {\n    event.preventDefault()\n    dispatch(createComment({ comment: newComment }, blog))\n    setNewComment('')\n  }\n\n\n  const blog = blogs.find(b => b.id === id)\n  return (\n    <div>\n    {\n      !confirmRemove\n        ? null\n        : <div className='remove-confirmation'>\n          <div className='remove-confirmation-dialog'>\n            <p>Do you really want to remove {blog.title} by {blog.author}?</p>\n            <div>\n              <button onClick={() => setConfirmRemove(false)}>Cancel</button>\n              <button onClick={() => handleRemove(blog.id)}>Remove</button>\n            </div>\n          </div>\n        </div>\n    }\n    {\n      blog ?\n      <div>\n        <h3>Blog app</h3>\n        <h2>{blog.title} by {blog.author}</h2>\n        <div>\n          <a href={blog.url} target=\"_blank\" rel=\"noopener noreferrer\">Read it!</a>\n          <p className='blog-item' id=\"likes\">\n          likes {blog.likes} <button onClick={() => like(blog.id)}>like</button>\n          </p>\n          <p className='blog-item'>{blog.user && blog.user.name ? <Link to={`/users/${blog.user.id}`}>{blog.user.name}</Link> : 'anonymous'}</p>\n              {\n                user && blog.user ?\n                user.name === blog.user.name ?\n                  <button onClick={() => setConfirmRemove(true)}>remove</button>\n                  : null\n                : null\n              }\n        </div>\n\n        <div>\n          <h4>Comments</h4>\n          <form onSubmit={addComment} className=\"blog-form\">\n            <div>\n              <label htmlFor=\"comment\">Comment:</label>\n              <input\n                name=\"comment\"\n                value={newComment}\n                onChange={handleCommentChange}\n              />\n              <button type=\"submit\">Add Comment</button>\n            </div>\n          </form>\n          { blog.comments && blog.comments.length\n            ? <ul>\n                { blog.comments.map(c =><li key={c.id}>{c.comment}</li>) }\n              </ul>\n            : null\n          }\n        </div>\n      </div>\n      : null\n    }\n    </div>\n  )\n}\n\nexport default BlogPage\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { initializeUsers } from '../reducers/usersReducer'\n// import usersService from '../services/users'\n\nconst Blogger = () => {\n  const id = useParams().id\n  const users = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (users.length) {\n      return\n    } else {\n      dispatch(initializeUsers())\n    }\n  }, [dispatch, users.length])\n\n  const blogger = users.find(u => u.id === id)\n\n  return (\n    <div>\n      {\n        !blogger || !blogger.blogs ?\n        <div>\n          <p>Loading...</p>\n        </div>\n        :\n        <div>\n          <h2>{blogger.name}</h2>\n          <h4>Added blogs</h4>\n          <ul>\n            {\n              blogger.blogs.map(b => <li key={b.id}><Link to={`/blogs/${b.id}`}>{b.title}</Link></li>)\n            }\n          </ul>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Blogger\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport  { initializeBlogs } from './reducers/blogsReducer'\nimport { logoutUser, setUser } from './reducers/userReducer'\nimport { initializeUsers } from './reducers/usersReducer'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Redirect\n} from 'react-router-dom'\n\nimport Navbar from './components/Navbar'\nimport Notification from './components/Notification'\nimport Login from './components/Login'\nimport Bloglist from './components/BlogList'\nimport Users from './components/Users'\nimport BlogPage from './components/BlogPage'\nimport Blogger from './components/Blogger'\n\nimport Container from '@material-ui/core/Container'\n\nconst App = () => {\n  const [loading, setLoading] = useState(true)\n\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setUser())\n    dispatch(initializeBlogs())\n    dispatch(initializeUsers())\n    setLoading(false)\n  }, [dispatch])\n\n  const handleLogout = () => {\n    dispatch(logoutUser(user))\n  }\n\n  return (\n    <Router>\n      <Container>\n        <Notification />\n        <Navbar user={user} handleLogout={handleLogout} />\n\n        {\n          loading ? <div>Loading...</div>\n          :\n          <Switch>\n            <Route path=\"/users/:id\" render={() =>\n              user\n              ? <Blogger users={users} />\n              : <Redirect to=\"/login\" />\n            } />\n\n            <Route path=\"/users\" render={() =>\n              user\n              ? <Users user={user} />\n              : <Redirect to=\"/login\" />\n            } />\n\n            <Route path=\"/blogs/:id\" render={() =>\n              user\n              ? <BlogPage user={user} />\n              : <Redirect to=\"/login\" />\n            } />\n\n            <Route path=\"/login\" render={() =>\n              user\n              ? <Redirect to=\"/\" />\n              : <Login />\n            } />\n\n            <Route path=\"/\" render={() =>\n              user === null\n              ? <Redirect to=\"/login\" />\n              : <Bloglist />\n            } />\n\n          </Switch>\n        }\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport userReducer from '../reducers/userReducer'\nimport usersReducer from '../reducers/usersReducer'\nimport blogsReducer from '../reducers/blogsReducer'\nimport notificationReducer from '../reducers/notificationReducer'\n\n\nconst reducer = combineReducers({\n  user: userReducer,\n  users: usersReducer,\n  blogs: blogsReducer,\n  notification: notificationReducer,\n})\n\nconst store = createStore(\n  reducer, composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}